{"trial_id": "02", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "window", "default": null, "conditions": [], "min_value": 2, "max_value": 16, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_0", "default": null, "conditions": [], "min_value": 64, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "rec_dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.05, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "bidirectional_0", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "dropout_0", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.3, "step": 0.05, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001, 1e-05], "ordered": true}}, {"class_name": "Int", "config": {"name": "batch_size", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "epochs", "default": null, "conditions": [], "min_value": 20, "max_value": 150, "step": 10, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_1", "default": null, "conditions": [], "min_value": 64, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "rec_dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.05, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "bidirectional_1", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.3, "step": 0.05, "sampling": "linear"}}], "values": {"window": 12, "num_layers": 3, "lstm_units_0": 288, "rec_dropout_0": 0.2, "bidirectional_0": false, "dropout_0": 0.1, "learning_rate": 0.0001, "batch_size": 128, "epochs": 90, "lstm_units_1": 256, "rec_dropout_1": 0.0, "bidirectional_1": true, "dropout_1": 0.2}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/dist-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/ipykernel_26/4249402836.py\", line 78, in run_trial\n    model = build_model(trial.hyperparameters)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/ipykernel_26/4249402836.py\", line 32, in build_model\n    model.add(LSTM(units,return_sequences=return_seq, recurrent_dropout=rec_drop))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/layers/rnn/lstm.py\", line 463, in __init__\n    cell = LSTMCell(\n           ^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/layers/rnn/lstm.py\", line 136, in __init__\n    self.seed_generator = backend.random.SeedGenerator(seed=seed)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/random/seed_generator.py\", line 75, in __init__\n    self.state = self.backend.Variable(\n                 ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/backend/common/variables.py\", line 162, in __init__\n    value = initializer(shape, dtype=dtype)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/random/seed_generator.py\", line 72, in seed_initializer\n    return self.backend.convert_to_tensor([seed, 0], dtype=dtype)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/keras/src/backend/tensorflow/core.py\", line 113, in convert_to_tensor\n    return tf.convert_to_tensor(x, dtype=dtype)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/tensorflow/python/util/traceback_utils.py\", line 153, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/usr/local/lib/python3.11/dist-packages/tensorflow/python/framework/constant_op.py\", line 108, in convert_to_eager_tensor\n    return ops.EagerTensor(value, ctx.device_name, dtype)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntensorflow.python.framework.errors_impl.InternalError: Failed copying input tensor from /job:localhost/replica:0/task:0/device:CPU:0 to /job:localhost/replica:0/task:0/device:GPU:0 in order to run _EagerConst: stream cannot wait for other\n"}